// ----------------------------------------
// THIS FILE IS AUTO-GENERATED.
// Any modifications may be overwritten.
// ----------------------------------------

// This file has been automatically generated to maintain data/code consistency.
// Manual changes could be lost during the next regeneration. It is advised not to modify this file directly.

// Purpose:
// This file serves as the base ACS file for the given library, exposing all public scripts/functions that you are allowed to use.
// This file is generated automatically to ensure accuracy and avoid mistakes with missing/unimplemented scripts/functions.

// Usage Guidelines:
// - DO NOT manually edit this file unless you fully understand its purpose and structure.
// - DO NOT manually expose public scripts/functions. There is no guarantee these scripts/functions persist in the next version.
// - If changes are necessary, request modification of the source code and regenerate the file.
// - Reach out to the developer for assistance with any concerns.

#library "csnexon"

/* Libdefines */


/* Libdefines, generated from enums */

#libdefine CLASS_ZOMBI_HOST "CSOZOmbie_Host"
#libdefine CLASS_ZOMBI "CSOZOmbie"
#libdefine ITEM_ZOMBI_KNIFE_HOST "CSOZombieKnife"
#libdefine ITEM_ZOMBI_KNIFE "CSOZombieKnife_Normal"
#libdefine ITEM_ZOMBI_VISION "Zombieeye"
#libdefine CLASS_ZOMBI_SPECIES "CSZombie"
#libdefine CLASS_HUMAN_SPECIES "CSHuman"
#libdefine SND_TRWON ""
#libdefine SND_CTWON ""
#libdefine SND_CONST_KLETSGO "radio/voice/ct/9"
#libdefine SND_CONST_ZBOMB_REGEN "zombi_bomb_regen"
#libdefine CONST_CS16_OG_SPEED 0.4
#libdefine CONST_ZOMBIE_SPEED 0.5
#libdefine CONST_GAMESTATE_PREP 0x01
#libdefine CONST_GAMESTATE_BUY 0x02
#libdefine CONST_GAMESTATE_BEGUN 0x03
#libdefine CSGM_OG 0
#libdefine CSGM_ZM 1
#libdefine CSGM_ZE 2
#libdefine CSGM_DEV 3

/* Public methods */


// Checks if given player number is valid playernumber.
function bool CheckPlayerNumber(int pnum, str func) {}
function int GetPlayerTid(int pnum) {}
function int GetPlayerNumberFromTid(int tid) {}
function void ClearCSPrint(void) {}
function void CSPrint(str what) {}

// Distinguishes given weapon's type. if not a specifiable type, returns 0.
function int CSDistinguishWeapon(str weapon) {}

// return's the given weapon's magazine actor's name
function str CSGetWeaponMag(str weapon) {}

// returns what ammo does the weapon use. [R3V'S SELFISH NOTE : I don't like this personally, as it is hardcoded to set appropriate ammotype according to the weapon's type, not parsing them automatically. ye]
function str CSGetWeaponAmmo(str weapon) {}
function int GetZombieCount(void) {}

// Checks if given playernumber's player is zombie or not.
function bool CSCheckInfection(int pnum) {}
function void KillSwitch(str reason, int errcode) {}

// Used in zombie claw weapons. Recommended to use this on serverside.
script "CSKnifeInfect"(void)  {}
